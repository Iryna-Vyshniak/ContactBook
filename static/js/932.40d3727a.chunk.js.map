{"version":3,"file":"static/js/932.40d3727a.chunk.js","mappings":"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","sources":["pages/RegistrationPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n//import Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/auth-operations';\n\nconst theme = createTheme();\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const onSignUp = location.pathname === '/register';\n  const [empty, setEmpty] = React.useState({ email: false, password: false });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const user = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    //console.log('form reg user: ', user);\n\n    if (user.name === '') {\n      setEmpty(prev => ({ ...prev, name: true }));\n      return;\n    }\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n    if (user.password === '') {\n      setEmpty(prev => ({ ...prev, password: true }));\n      return;\n    }\n\n    dispatch(registerUser(user));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            SignUp\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  //autoComplete=\"given-name\"\n                  name=\"name\"\n                  autoFocus\n                  error={empty.name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  // autoComplete=\"email\"\n                  error={empty.email}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  // autoComplete=\"new-password\"\n                  error={empty.password}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                {onSignUp && (\n                  <Link to={`/login`} variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                )}\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["theme","createTheme","Register","dispatch","useDispatch","onSignUp","useLocation","pathname","_React$useState","React","email","password","_React$useState2","_slicedToArray","empty","setEmpty","_jsx","ThemeProvider","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","user","name","get","registerUser","prev","_objectSpread","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","autoFocus","error","type","FormControlLabel","control","Checkbox","value","color","Button","mb","justifyContent","Link","to"],"sourceRoot":""}