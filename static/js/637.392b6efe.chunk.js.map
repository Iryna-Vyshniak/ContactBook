{"version":3,"file":"static/js/637.392b6efe.chunk.js","mappings":"6YAoBMA,GAAeC,EAAAA,EAAAA,KAEN,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAiC,YAFtBC,EAAAA,EAAAA,MAESC,SAE1BC,GAA0BC,EAAAA,EAAAA,UAAS,CAAEC,OAAO,EAAOC,UAAU,IAAQC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA9DM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAyBtB,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAACC,MAAOlB,EAAamB,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,WAAS,EACTC,UAAU,OACVC,GAAI,CACFC,OAAQ,QACRC,gBAAgB,6FAChBC,iBAAkB,YAClBC,gBAAiB,SAAAC,GAAC,MACG,UAAnBA,EAAEC,QAAQC,KACNF,EAAEC,QAAQE,KAAK,IACfH,EAAEC,QAAQE,KAAK,IAAI,EACzBC,eAAgB,QAChBC,mBAAoB,UACpBf,SAAA,EAEFH,EAAAA,EAAAA,KAACmB,EAAAA,GAAW,KACZnB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACe,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,KACjCvB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACHe,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJhB,UAAWiB,EAAAA,EACXC,UAAW,GACXC,QAAM,EACNlB,GAAI,CACFC,OAAQ,SACRN,UAEFC,EAAAA,EAAAA,MAACuB,EAAAA,EAAG,CACFnB,GAAI,CACFoB,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZ7B,SAAA,EAEFH,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACzB,GAAI,CAAE0B,EAAG,EAAGC,QAAS,kBAAmBhC,UAC9CH,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,OAEnBpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAAC9B,UAAU,KAAK+B,QAAQ,KAAInC,SAAC,YAGxCC,EAAAA,EAAAA,MAACuB,EAAAA,EAAG,CACFpB,UAAU,OACVgC,YAAU,EACVC,SAxES,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAO,IAAIC,SAASH,EAAEI,eAEtBC,EAAO,CACXpD,MAAOiD,EAAKI,IAAI,SAChBpD,SAAUgD,EAAKI,IAAI,aAKF,KAAfD,EAAKpD,MAIa,KAAlBoD,EAAKnD,SAKTR,GAAS6D,EAAAA,EAAAA,IAAUF,IAJjB/C,GAAS,SAAAkD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEtD,UAAU,GAAI,IAJ3CI,GAAS,SAAAkD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEvD,OAAO,GAAI,GAS5C,EAoDYc,GAAI,CAAE2C,GAAI,GAAIhD,SAAA,EAEdC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC8C,QAAS,EAAEjD,SAAA,EACzBH,EAAAA,EAAAA,KAACqD,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAOhE,EAAMJ,SAEfM,EAAAA,EAAAA,KAACqD,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNK,KAAK,WACLN,GAAG,WACHG,aAAa,mBACbE,MAAOhE,EAAMH,YAEfK,EAAAA,EAAAA,KAACgE,EAAAA,EAAgB,CACfC,SAASjE,EAAAA,EAAAA,KAACkE,EAAAA,EAAQ,CAACC,MAAM,WAAWC,MAAM,YAC1CV,MAAM,iBAER1D,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,CACLN,KAAK,SACLP,WAAS,EACTlB,QAAQ,YACR9B,GAAI,CAAE2C,GAAI,EAAGmB,GAAI,GAAInE,SACtB,gBAKHC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAAH,SAAA,EACbH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACe,MAAI,EAACC,IAAE,EAAAlB,UACXH,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CAACC,KAAK,IAAIlC,QAAQ,QAAOnC,SAAC,wBAIjCH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACe,MAAI,EAAAjB,SACPd,IACCW,EAAAA,EAAAA,KAACuE,EAAAA,GAAI,CAACE,GAAE,YAAenC,QAAQ,QAAQ8B,MAAM,UAASjE,SACnD,oDAWvB,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n//import Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logInUser } from 'redux/auth/auth-operations';\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme();\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const onSignIn = location.pathname === '/login';\n\n  const [empty, setEmpty] = useState({ email: false, password: false });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    const user = {\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    //console.log('form login user: ', user);\n\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n    if (user.password === '') {\n      setEmpty(prev => ({ ...prev, password: true }));\n      return;\n    }\n\n    dispatch(logInUser(user));\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid\n        container\n        component=\"main\"\n        sx={{\n          height: '100vh',\n          backgroundImage: `url(\"https://ik.imagekit.io/irinavn2011/mobile-phone-1917737.jpg?updatedAt=1684182004004\")`,\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: t =>\n            t.palette.mode === 'light'\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      >\n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={7} />\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          md={5}\n          component={Paper}\n          elevation={24}\n          square\n          sx={{\n            height: '100vh',\n          }}\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              SignIn\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <Grid container spacing={2}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                  error={empty.email}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  error={empty.password}\n                />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  Sign In\n                </Button>\n              </Grid>\n\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  {onSignIn && (\n                    <Link to={`/register`} variant=\"body2\" color=\"primary\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n"],"names":["defaultTheme","createTheme","Login","dispatch","useDispatch","onSignIn","useLocation","pathname","_useState","useState","email","password","_useState2","_slicedToArray","empty","setEmpty","_jsx","ThemeProvider","theme","children","_jsxs","Grid","container","component","sx","height","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","CssBaseline","item","xs","sm","md","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","e","preventDefault","data","FormData","currentTarget","user","get","logInUser","prev","_objectSpread","mt","spacing","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","error","type","FormControlLabel","control","Checkbox","value","color","Button","mb","Link","href","to"],"sourceRoot":""}