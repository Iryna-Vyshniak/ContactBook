{"version":3,"file":"static/js/637.c298451b.chunk.js","mappings":"6YAiBMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiC,YADtBC,EAAAA,EAAAA,MACSC,SAC1BC,EAA0BC,EAAAA,SAAe,CAAEC,OAAO,EAAOC,UAAU,IAAQC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApEM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAyBtB,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAACjB,MAAOA,EAAMkB,UAC1BC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIJ,SAAA,EACvCF,EAAAA,EAAAA,KAACO,EAAAA,GAAW,KACZJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZX,SAAA,EAEFF,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmBd,UAC9CF,EAAAA,EAAAA,KAACiB,EAAAA,EAAgB,OAEnBjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACb,UAAU,KAAKc,QAAQ,KAAIjB,SAAC,aAGxCC,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFH,UAAU,OACVe,SA3CW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAE1BC,EAAO,CACXhC,MAAO6B,EAAKI,IAAI,SAChBhC,SAAU4B,EAAKI,IAAI,aAKF,KAAfD,EAAKhC,MAIa,KAAlBgC,EAAK/B,SAKTR,GAASyC,EAAAA,EAAAA,IAAUF,IAJjB3B,GAAS,SAAA8B,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAElC,UAAU,GAAI,IAJ3CI,GAAS,SAAA8B,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEnC,OAAO,GAAI,GAS5C,EAuBUqC,YAAU,EACVtB,GAAI,CAAEuB,GAAI,GAAI9B,SAAA,EAEdF,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QAELC,WAAS,EACTC,MAAO3C,EAAMJ,SAEfM,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WAEHI,MAAO3C,EAAMH,YAEfK,EAAAA,EAAAA,KAAC2C,EAAAA,EAAgB,CACfC,SAAS5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAQ,CAACC,MAAM,WAAWC,MAAM,YAC1CT,MAAM,iBAERtC,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CACLN,KAAK,SACLN,WAAS,EACTjB,QAAQ,YACRV,GAAI,CAAEuB,GAAI,EAAGiB,GAAI,GAAI/C,SACtB,aAGDC,EAAAA,EAAAA,MAAC+C,EAAAA,GAAI,CAACC,WAAS,EAAAjD,SAAA,EACbF,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAACE,MAAI,EAACC,IAAE,EAAAnD,UACXF,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,KAAK,IAAIpC,QAAQ,QAAOjB,SAAC,wBAIjCF,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAACE,MAAI,EAAAlD,SACPb,IACCW,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACE,GAAE,YAAerC,QAAQ,QAAOjB,SACnC,kDAUrB,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/auth/auth-operations';\n\nconst theme = createTheme();\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const onSignIn = location.pathname === '/login';\n  const [empty, setEmpty] = React.useState({ email: false, password: false });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const user = {\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    //console.log('form login user: ', user);\n\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n    if (user.password === '') {\n      setEmpty(prev => ({ ...prev, password: true }));\n      return;\n    }\n\n    dispatch(logInUser(user));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              // autoComplete=\"email\"\n              autoFocus\n              error={empty.email}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              // autoComplete=\"current-password\"\n              error={empty.password}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                {onSignIn && (\n                  <Link to={`/register`} variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                )}\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["theme","createTheme","Login","dispatch","useDispatch","onSignIn","useLocation","pathname","_React$useState","React","email","password","_React$useState2","_slicedToArray","empty","setEmpty","_jsx","ThemeProvider","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","user","get","logInUser","prev","_objectSpread","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoFocus","error","type","FormControlLabel","control","Checkbox","value","color","Button","mb","Grid","container","item","xs","Link","href","to"],"sourceRoot":""}